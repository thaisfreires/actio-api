package com.actio.actio_api.model;

import jakarta.persistence.*;
import lombok.*;

import java.math.BigDecimal;
import java.util.List;

/**
 * Represents a user-linked financial account within the system.
 *
 * This entity holds the current balance, account status, and associations with
 * user data and stock holdings. It maintains relationships with StockItem and Movement,
 * allowing the system to track both cash and asset-based activity.
 *
 * The `currentBalance` field is automatically adjusted by a database trigger whenever
 * a movement is recorded. Similarly, any transactions involving stock purchases or
 * sales automatically update the corresponding StockItem quantities via trigger.
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString(exclude = "actioUser")
@EqualsAndHashCode(exclude = "actioUser")
@Entity
@Table(name = "account")
public class Account {

    /**
     * Unique identifier of the account.
     * Auto-generated by the persistence provider.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_account")
    private Long id;

    /**
     * Reference to the ActioUser who owns this account.
     * One-to-one relationship with cascading operations enabled.
     */
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "id_user", referencedColumnName = "id_user")
    private ActioUser actioUser;

    /**
     * Current financial balance associated with the account.
     * Stored with high-precision using BigDecimal.
     */
    @Column(name = "current_balance")
    private BigDecimal currentBalance;

    /**
     * Status of the account, such as active, suspended, or closed.
     * Many accounts can share the same status code reference.
     */
    @ManyToOne
    @JoinColumn(name = "status_code")
    private AccountStatus status;

    /**
     * List of stock items linked to this account.
     * One-to-many relationship; items reference this account as their owner.
     */
    @OneToMany(mappedBy = "account")
    private List<StockItem> items;

}
