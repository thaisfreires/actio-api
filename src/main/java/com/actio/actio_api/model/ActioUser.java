package com.actio.actio_api.model;

import com.actio.actio_api.validation.annotation.Adult;
import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.*;
import org.hibernate.validator.constraints.Length;

import java.time.LocalDate;

/**
 * Represents a user entity stored in the "actio_user" database table.
 *
 * This class encapsulates all essential user-related data including identity,
 * credentials, personal information, role associations, and business rules validation.
 *
 * Validation annotations enforce consistency, security requirements, and legal constraints
 * such as age and document format. This entity is mapped using JPA and participates in
 * multiple relationships (role and account).
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString(exclude = "account")
@EqualsAndHashCode(exclude = "account")
@Entity
@Table(name = "actio_user")
public class ActioUser {

    /**
     * The primary key identifier of the user.
     * Auto-generated by the database using identity strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_user")
    private Long id;

    /**
     * Full name of the user.
     * Required field with a length between 2 and 250 characters.
     */
    @NotNull
    @Length(min = 2, max = 250)
    @Column(name = "full_name")
    private String name;

    /**
     * Portuguese NIF (Tax Identification Number).
     * Must be exactly 9 digits and unique across the database.
     * Format and length are validated for accuracy.
     */
    @Size(min = 9, max = 9, message = "NIF must contain 9 digits")
    @Pattern(regexp = "\\d{9}", message = "Invalid NIF")
    @NotNull(message = "A valid NIF is required")
    @Column(name = "nif", unique = true)
    private String nif;

    /**
     * Date of birth of the user.
     * Mandatory field; must confirm the user is at least 18 years old.
     * Validation is handled through a custom annotation.
     */
    @NotNull(message = "Date of birth is required")
    @Adult()
    @Column(name = "date_of_birth")
    private LocalDate date_of_birth;

    /**
     * Email address for authentication and contact.
     * Must be in a valid format and unique across all user records.
     */
    @NotNull(message = "Email address is required")
    @Email(message = "Invalid email address")
    @Column(name = "email", unique = true)
    private String email;

    /**
     * Encrypted user password used for authentication.
     * Must contain at least 9 characters.
     */
    @NotNull(message = "Password is required")
    @Length(min = 9, message = "Password must be at least 9 characters long")
    @Column(name = "user_password")
    private String password;

    /**
     * Associated role of the user for access control.
     * Defines user permissions within the system.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "role_code")
    private UserRole userRole;

    /**
     * Linked account entity corresponding to the user.
     * One-to-one bidirectional relationship.
     */
    @OneToOne(mappedBy = "actioUser")
    private Account account;
}
